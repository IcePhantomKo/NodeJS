{"version":3,"file":"rtsp2web.min.js","sources":["../node_modules/base-64/base64.js","../node_modules/ws/lib/constants.js","../node_modules/ws/lib/buffer-util.js","../node_modules/ws/lib/limiter.js","../node_modules/ws/lib/permessage-deflate.js","../node_modules/ws/lib/validation.js","../node_modules/ws/lib/receiver.js","../node_modules/ws/lib/sender.js","../node_modules/ws/lib/event-target.js","../node_modules/ws/lib/extension.js","../node_modules/ws/lib/websocket.js","../node_modules/ws/lib/stream.js","../node_modules/ws/lib/subprotocol.js","../node_modules/ws/lib/websocket-server.js","../node_modules/ws/index.js","../main.js"],"sourcesContent":["/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n\n  module.exports = {\n    concat,\n    mask(source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    },\n    toArrayBuffer,\n    toBuffer,\n    unmask(buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    }\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    concat,\n    mask: _mask,\n    toArrayBuffer,\n    toBuffer,\n    unmask: _unmask\n  };\n}\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8(buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    },\n    tokenChars\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8: _isValidUTF8,\n    tokenChars\n  };\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n'use strict';\n\nconst net = require('net');\nconst tls = require('tls');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        randomFillSync(mask, 0, 4);\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, listener, options = {}) {\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = listener;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: undefined,\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n\n    websocket._url = address;\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n  let invalidURLMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isUnixSocket) {\n    invalidURLMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", or \"ws+unix:\"';\n  } else if (isUnixSocket && !parsedUrl.pathname) {\n    invalidURLMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidURLMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidURLMessage) {\n    const err = new SyntaxError(invalidURLMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const get = isSecure ? https.get : http.get;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket',\n    ...opts.headers\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalHost = parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (parsedUrl.host !== websocket._originalHost) {\n      //\n      // Match curl 7.77.0 behavior and drop the following headers. These\n      // headers are also dropped when following a redirect to a subdomain.\n      //\n      delete opts.headers.authorization;\n      delete opts.headers.cookie;\n      delete opts.headers.host;\n      opts.auth = undefined;\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n  }\n\n  let req = (websocket._req = get(opts));\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req.aborted) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n}\n\n/**\n * Emit the `'error'` and `'close'` event.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst net = require('net');\nconst tls = require('tls');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key =\n      req.headers['sec-websocket-key'] !== undefined\n        ? req.headers['sec-websocket-key']\n        : false;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (\n      req.method !== 'GET' ||\n      req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !key ||\n      !keyRegex.test(key) ||\n      (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortHandshake(socket, 400);\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  if (socket.writable) {\n    message = message || http.STATUS_CODES[code];\n    headers = {\n      Connection: 'close',\n      'Content-Type': 'text/html',\n      'Content-Length': Buffer.byteLength(message),\n      ...headers\n    };\n\n    socket.write(\n      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n        Object.keys(headers)\n          .map((h) => `${h}: ${headers[h]}`)\n          .join('\\r\\n') +\n        '\\r\\n\\r\\n' +\n        message\n    );\n  }\n\n  socket.removeListener('error', socketOnError);\n  socket.destroy();\n}\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n","/*!\r\n * name: main.js\r\n * desc: 为了将rtsp2web发布为一个 npm 包；\r\n * 由于resource.js中require了一些第三方node包，在使用rollup打包时，\r\n * 不符合模块打包的规范（import是符合模块打包规范的）\r\n * main.js就是将resource.js进行轻微的改动；以及精简（为了打包产物最小化）\r\n * 这样可以使用rollup进行打包处理，以及做一些压缩和babel的处理\r\n * 打包后的产物直接看dist目录里面的吧，使用方法参考example目录\r\n * (c) begin with 2022 by NeverYu\r\n * Released under the ISC License.\r\n */\r\nconst child = require('child_process')\r\nconst events = require('events')\r\nconst url = require('url')\r\nimport { decode } from 'base-64'\r\nimport { Server } from 'ws'\r\nconst WebSocketServer = Server\r\n\r\n// 默认的ffmpeg路径（一般正常安装的ffmpeg，名称(路径)是：ffmpeg）\r\nconst FFmpegPath = 'ffmpeg'\r\n// 默认的端口\r\nconst defaultPort = 9999\r\n// 默认的视频视口框架大小\r\nconst videoSize = '1920x1080'\r\n\r\n/**\r\n * 用于创建一个新的视频转码流类\r\n */\r\nclass Mpeg2Muxer extends events.EventEmitter {\r\n  exitCode = undefined\r\n  // 额外的 ffmpeg 参数\r\n  additionalFlags = []\r\n  stream = null\r\n  inputStreamStarted = false\r\n  constructor(options) {\r\n    super()\r\n    this.options = options\r\n    this.ffmpegPath = options.ffmpegPath || FFmpegPath\r\n    this.url = options.url\r\n    this.ffmpegOptions = options.ffmpegOptions\r\n    this.initMpeg2Muxer()\r\n  }\r\n  initMpeg2Muxer() {\r\n    // ffmpeg参数解析\r\n    if (this.ffmpegOptions) {\r\n      for (let key in this.ffmpegOptions) {\r\n        this.additionalFlags.push(key)\r\n        if (String(this.ffmpegOptions[key]) !== '') {\r\n          this.additionalFlags.push(String(this.ffmpegOptions[key]))\r\n        }\r\n      }\r\n    }\r\n    // 参数整合拼接\r\n    this.spawnOptions = [\r\n      \"-rtsp_transport\", \"tcp\", \"-thread_queue_size\", \"512\",\r\n      \"-i\",\r\n      this.url,\r\n      '-f',\r\n      'mpegts',\r\n      '-codec:v',\r\n      'mpeg1video',\r\n      // additional ffmpeg options go here\r\n      ...this.additionalFlags,\r\n      '-'\r\n    ]\r\n    // 创建一个命令行子进程\r\n    this.stream = child.spawn(this.ffmpegPath, this.spawnOptions, {\r\n      detached: false\r\n    })\r\n\r\n    this.stream.on('error', (code, signal) => {\r\n      console.error('启动ffmpeg时出错，请确保你安装了ffmpeg，然后检查路径或者命令参数')\r\n    })\r\n    this.stream.on('close', (code, signal) => {\r\n      console.log('ffmpeg关闭，code：', code)\r\n      return this.emit('exitWithError')\r\n    })\r\n\r\n    this.inputStreamStarted = true\r\n    this.stream.stdout.on('data', (data) => {\r\n      return this.emit('mpeg2data', data)\r\n    })\r\n    this.stream.stderr.on('data', (data) => {\r\n      return this.emit('ffmpegStderr', data)\r\n    })\r\n    this.stream.on('exit', (code, signal) => {\r\n      if (code === 1) {\r\n        console.error('RTSP stream exited with error')\r\n        this.exitCode = 1\r\n        return this.emit('exitWithError')\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * 一个视频通道可能对应多个客户端（也就是多个ws句柄）\r\n * 为什么呢\r\n * 因为一个rtsp视频流可能有多个客户端在同时播放的情况，视频转码是需要消耗电脑cpu的\r\n * 为了避免资源的浪费，同一个rtsp视频流只开启一个转码程序，也就是一个视频通道\r\n * 多个ws句柄可以共用一个视频通道\r\n */\r\nclass Channel {\r\n  /**\r\n   * 视频通道空闲的时间，如果这个视频通道的空闲时间超过一个设定值\r\n   * 我们就可以关闭这个视频通道了，停掉转码服务，释放电脑资源\r\n   * @type {Number}\r\n   */\r\n  freeTime = 0\r\n\t/* 视频通道是否正在封装码流 */\r\n  isStreamWrap = false\r\n  clients = []\r\n  mpeg2Muxer = {\r\n    instance: null,\r\n    stream: null,\r\n    data: null\r\n  }\r\n\r\n\tconstructor(config, client) {\r\n    // 前端传过来的参数\r\n\t\tthis.config = config\r\n    // 当前视频通道的ws句柄\r\n    this.client = client\r\n\t}\r\n  // 创建一个rtsp的视频转码\r\n  createStream() {\r\n\t\tif(this.isStreamWrap) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.isStreamWrap = true\r\n\t\tthis.mpeg2Muxer.instance = new Mpeg2Muxer({\r\n      ffmpegOptions : {\r\n        \"-stats\": \"\", // 没有必要值的选项使用空字符串\r\n        \"-r\": 20,\r\n        \"-s\": videoSize,\r\n        \"-b:v\": \"2000k\"\r\n      },\r\n      url: this.config.url,\r\n      ffmpegPath: \"ffmpeg\"\r\n\t\t})\r\n    this.mpeg2Muxer.stream = this.mpeg2Muxer.instance.stream\r\n    this.mpeg2Muxer.instance.on('mpeg2data', (data) => {\r\n      /**\r\n       * 【广播数据】\r\n       * rtsp视频流实时转帧之后，当前视频流通道实时进行广播\r\n       * 将图像数据广播给它的所有client（也就是它的每个ws句柄）\r\n       */\r\n      this.broadcast(data)\r\n      // this.mpeg2Muxer.data = data\r\n    })\r\n\t}\r\n  /**\r\n   * 结束视频转码推流，销毁一个视频通道\r\n   */\r\n  stopStreamWrap() {\r\n    this.mpeg2Muxer.stream.kill()\r\n    this.mpeg2Muxer.stream = null\r\n  }\r\n  broadcast(data) {\r\n    for(let client of this.clients) {\r\n      if(client.isSegment) {\r\n        client.send(data)\r\n      }\r\n    }\r\n  }\r\n  // client就是每个ws连接成功后的句柄\r\n\taddClient(client) {\r\n    client.once('close', () => {\r\n      this.dropClient(client)\r\n    })\r\n    this.clients.push(client)\r\n\t\tif(!this.isStreamWrap) {\r\n\t\t\tthis.createStream()\r\n\t\t}\r\n    // isSegment是一个标志位，标识这个ws句柄正在使用中\r\n    client.isSegment = true\r\n\t}\r\n  // ws句柄向客户端发送数据帧\r\n  sendData(client) {\r\n    client.send(this.mpeg1Muxer.data)\r\n    // isSegment是一个标志位，标识这个ws句柄正在使用中\r\n    client.isSegment = true\r\n  }\r\n  dropClient(client) {\r\n    let index = this.clients.indexOf(client)\r\n    if(index > -1) {\r\n      this.clients.splice(index, 1)\r\n    }\r\n  }\r\n}\r\n\r\nimport { version } from './package.json'\r\n\r\n/**\r\n * 入口类\r\n */\r\nclass RTSP2web {\r\n  static version = version\r\n\t// 视频实例列表(以rtsp_url作为唯一区分)\r\n\tchannels = []\r\n\t/**\r\n   * 实例化一个流媒体服务器对象\r\n   * @param http HTTP服务\r\n   */\r\n  constructor(config) {\r\n    // RTSP2web是入口类，在入口类中对视频通道进行空闲检测\r\n    setInterval(() => this.checkFree(), 10000)\r\n\r\n  \t// 创建websocket服务器，监听在${port}端口\r\n  \tthis.wss = new WebSocketServer({\r\n  \t\tport: config ? config.port || defaultPort : defaultPort\r\n  \t})\r\n\r\n  \t/**\r\n  \t * Event: 'connection'成功握手连接时触发\r\n  \t * [socket] {WebSocket} socket连接句柄（解释：每一个成功连接到这个websocket服务器的链接就是一个句柄，句柄之间是独立的）\r\n  \t * [request] {http.IncomingMessage}\r\n  \t */\r\n  \tthis.wss.on('connection', (ws, request) => {\r\n  \t\t// 通过 ws 对象，就可以获取到客户端发送过来的信息和主动推送信息给客户端\r\n  \t\t// 1、解析url\r\n  \t\tconst params = url.parse(request.url, true)\r\n  \t\t// console.log(params.query.url)\r\n\r\n  \t\t// 2、每一个新的长连接连接成功以后，给它注册一下（其实就是记录一下）\r\n  \t\tif (params.query.url) {\r\n        // 因为我定义的是，前端的rtsp_url用btoa处理后以参数的形式传入，所有这里需要解析一下\r\n        const url = decode(params.query.url.toString())\r\n        // console.log(url)\r\n        this.registeClient(ws, {\r\n        \turl\r\n        })\r\n    \t}\r\n      console.log('一个新的client(ws句柄)连接成功')\r\n  \t})\r\n  }\r\n\r\n  /**\r\n   * 注册一个视频播放流(注册一个ws句柄)\r\n   */\r\n  registeClient(ws, data) {\r\n  \tlet channel = this.getChannel(data.url)\r\n  \tif(!channel) {\r\n  \t\tchannel = this.createChannel(data, ws)\r\n  \t}\r\n  \tchannel.addClient(ws)\r\n  }\r\n\r\n  getChannel(url) {\r\n  \tfor(let channel of this.channels) {\r\n  \t\tif(channel.config.url === url) {\r\n  \t\t\treturn channel\r\n  \t\t}\r\n  \t}\r\n  \treturn null\r\n  }\r\n\r\n  /**\r\n   * 创建一个视频通道\r\n   * @Author   Author\r\n   * @DateTime 2022-05-06T14:40:28+0800\r\n   * @param    {[type]}                 data [description]\r\n   * @param    {[type]}                 ws   [description]\r\n   * @return   {[type]}                      [description]\r\n   */\r\n  createChannel(data, ws) {\r\n    // 一个channel就是一个视频通道\r\n  \tconst channel = new Channel(data, ws)\r\n  \tthis.channels.push(channel)\r\n  \treturn channel\r\n  }\r\n\r\n  /**\r\n   * 空闲检测，视频通道空间超过1分钟，则移除对应的视频通道\r\n   * @Author   Author\r\n   * @DateTime 2022-02-15T14:25:47+0800\r\n   * @return   {[type]}                 [description]\r\n   */\r\n  checkFree() {\r\n    for(let channel of this.channels) {\r\n      if(channel.clients.length > 0) {\r\n        channel.freeTime = 0\r\n      } else {\r\n        channel.freeTime += 10\r\n      }\r\n      if(channel.freeTime >= 60) {\r\n        this.destroyedChannel(channel)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁/停掉一个视频通道\r\n   * @Author   Author\r\n   * @DateTime 2022-02-15T14:29:35+0800\r\n   * @param    {[type]}                 channel [description]\r\n   * @return   {[type]}                         [description]\r\n   */\r\n  destroyedChannel(channel) {\r\n    let index = this.channels.indexOf(channel)\r\n    if(index > -1) {\r\n      this.channels.splice(index, 1)\r\n      channel.stopStreamWrap()\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = RTSP2web\r\n"],"names":["root","freeExports","exports","freeModule","module","freeGlobal","global","window","InvalidCharacterError","message","this","prototype","Error","name","error","TABLE","REGEX_SPACE_CHARACTERS","base64","encode","input","String","test","a","b","c","buffer","padding","length","output","position","charCodeAt","charAt","decode","replace","bitStorage","bitCounter","indexOf","fromCharCode","version","nodeType","key","hasOwnProperty","constants","BINARY_TYPES","EMPTY_BUFFER","Buffer","alloc","GUID","kForOnEventAttribute","Symbol","kListener","kStatusCode","kWebSocket","NOOP","require$$0","concat","list","totalLength","target","allocUnsafe","offset","i","buf","set","slice","_mask","source","mask","_unmask","toArrayBuffer","byteLength","byteOffset","toBuffer","data","readOnly","isBuffer","ArrayBuffer","from","isView","bufferUtil","require","bufferUtilModule","unmask","e","kDone","kRun","limiter","constructor","concurrency","pending","Infinity","jobs","add","job","push","shift","zlib","require$$1","Limiter","require$$2","require$$3","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","permessageDeflate","options","isServer","maxPayload","_maxPayload","_options","_threshold","undefined","threshold","_isServer","_deflate","_inflate","params","concurrencyLimit","extensionName","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","configurations","normalizeParams","acceptAsServer","acceptAsClient","cleanup","close","callback","offers","opts","accepted","find","response","forEach","Object","keys","value","num","Number","isInteger","TypeError","decompress","fin","done","_decompress","err","result","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","on","inflateOnError","inflateOnData","write","flush","_readableState","endEmitted","reset","createDeflateRaw","zlibDeflateOptions","deflateOnData","Z_SYNC_FLUSH","chunk","RangeError","code","removeListener","tokenChars","isValidStatusCode","_isValidUTF8","len","isValidUTF8","validationModule","Writable","PerMessageDeflate","require$$4","receiver","super","_binaryType","binaryType","_extensions","extensions","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","_write","encoding","cb","startLoop","consume","n","dst","Uint8Array","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","compressed","haveLength","readUInt16BE","readUInt32BE","Math","pow","controlMessage","dataMessage","er","messageLength","fragments","emit","end","ErrorCtor","prefix","statusCode","errorCode","captureStackTrace","randomFillSync","require$$5","applyMask","require$$6","kByteLength","maskBuffer","Sender","socket","generateMask","_generateMask","_maskBuffer","_socket","_firstFragment","_deflating","_queue","static","dataLength","merge","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","enqueue","dispatch","sendFrame","frame","ping","pong","send","perMessageDeflate","binary","_","destroyed","dequeue","Reflect","apply","cork","uncork","sender","kCode","kData","kMessage","kReason","kTarget","kType","kWasClean","Event","type","defineProperty","enumerable","CloseEvent","reason","wasClean","ErrorEvent","MessageEvent","EventTarget","addEventListener","listener","wrapper","isBinary","event","toString","call","_closeFrameReceived","_closeFrameSent","once","removeEventListener","handler","listeners","eventTarget","dest","elem","extension","format","map","Array","isArray","k","values","v","join","parse","header","create","paramName","mustUnescape","isEscaping","inQuotes","start","SyntaxError","token","EventEmitter","https","http","net","tls","randomBytes","createHash","URL","require$$7","require$$8","Receiver","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","readyStates","subprotocolRegex","protocolVersions","WebSocket","address","protocols","_closeCode","_closeMessage","_closeTimer","_paused","_protocol","_readyState","CONNECTING","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","includes","bufferedAmount","_writableState","isPaused","onclose","onerror","onopen","onmessage","protocol","readyState","url","_url","setSocket","head","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","setTimeout","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","socketOnError","OPEN","emitClose","CLOSED","removeAllListeners","msg","abortHandshake","_req","CLOSING","errorEmitted","destroy","bind","pause","sendAfterClose","resume","needDrain","terminate","property","method","get","websocket","protocolVersion","followRedirects","maxRedirects","createConnection","socketPath","hostname","timeout","host","path","port","parsedUrl","href","isSecure","isUnixSocket","invalidURLMessage","pathname","hash","emitErrorAndClose","defaultPort","protocolSet","Set","tlsConnect","netConnect","startsWith","headers","Connection","Upgrade","search","handshakeTimeout","has","origin","Origin","username","password","auth","parts","split","_originalHost","entries","toLowerCase","authorization","cookie","req","aborted","res","location","addr","abort","digest","update","serverProt","protError","size","secWebSocketExtensions","extensionNames","connect","servername","isIP","stream","setHeader","process","nextTick","receiverOnFinish","read","clearTimeout","finished","Duplex","duplexOnEnd","duplexOnError","listenerCount","ws","terminateOnDestroy","duplex","autoDestroy","objectMode","writableObjectMode","_destroy","called","_final","_read","subprotocol","keyRegex","websocketServer","handleProtocols","clientTracking","verifyClient","noServer","backlog","server","_server","createServer","body","STATUS_CODES","writeHead","listen","emitConnection","_removeListeners","addListeners","listening","upgrade","handleUpgrade","clients","_shouldEmitClose","shouldHandle","index","secWebSocketProtocol","info","secure","authorized","encrypted","verified","completeUpgrade","readable","writable","next","delete","h","createWebSocketStream","Server","WebSocketServer","child","events","Mpeg2Muxer","_this","_classCallCheck","_defineProperty","_assertThisInitialized","_super","ffmpegPath","ffmpegOptions","initMpeg2Muxer","_this2","additionalFlags","spawnOptions","_toConsumableArray","spawn","detached","signal","console","log","inputStreamStarted","stdout","stderr","exitCode","Channel","config","client","instance","_this3","isStreamWrap","mpeg2Muxer","broadcast","kill","_step","_iterator","_createForOfIteratorHelper","s","isSegment","f","_this4","dropClient","createStream","mpeg1Muxer","splice","RTSP2web","_this5","setInterval","checkFree","wss","request","query","registeClient","channel","getChannel","createChannel","addClient","_step2","_iterator2","channels","_step3","_iterator3","freeTime","destroyedChannel","stopStreamWrap"],"mappings":"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"}